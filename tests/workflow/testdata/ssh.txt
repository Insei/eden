[!exec:bash] stop
[!exec:grep] stop
[!exec:sed] stop
[!exec:ssh] stop

#eden config add default
#eden setup
#eden start
#eden eve onboard

# Get EVE's onboarded UUID
eden -t 1m eve onboard
cp stdout onboard
exec bash uuid.sh

# Get redirected SSH port
eden config get --key eve.hostfwd
cp stdout eve.hostfwd

# SSH login to EVE and getting UUID
exec -t 2m bash ssh.sh

# UUID's comparison
cmp stdout uuid

# Test's config. file
-- eden-config.yml --
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}

-- uuid.sh --
grep 'device UUID' onboard | sed 's/.*device UUID: \(.*\)"/\1/' > uuid

-- ssh.sh --
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}
PORT=`cat eve.hostfwd | sed 's/.*[^0-9]\([0-9]*\):22[^0-9].*/\1/'`
[ -n "$PORT" ] && [ "$PORT" -eq "$PORT" ] 2>/dev/null
if [ $? -ne 0 ]; then
   PORT=22
fi
CERT=`echo {{EdenConfig "eden.root"}}/{{EdenConfig "eden.ssh-key"}} | sed 's/\.pub$//'`
HOST=`$EDEN eve status|grep 'EVE Request IP'|grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'`
until ssh -o ConnectTimeout=5 -oStrictHostKeyChecking=no -i $CERT -p $PORT root@$HOST cat /config/uuid; do sleep 10; done
