{{$test_opts := "-test.v -timewait 1200"}}
{{$test_msg := "This is a test"}}
{{define "port"}}2223{{end}}
{{define "ssh"}}ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i {{EdenConfig "eden.root"}}/../tests/eclient/image/cert/id_rsa root@localhost -p {{template "port"}}{{end}}

[!exec:bash] stop
[!exec:sleep] stop
[!exec:ssh] stop

# Starting of reboot detector with a 2 reboot limit
! test eden.reboot.test -test.v -timewait 600 -reboot=0 -count=2 &

eden pod deploy -v debug -n eclient docker://itmoeve/eclient:latest -p {{template "port"}}:22
#eden -t 20m pod logs eclient
#stdout 'Executing "/usr/sbin/sshd" "-D"'

eden pod deploy -v debug -n eserver docker://itmoeve/eclient:latest

test eden.app.test -test.v -timewait 20m RUNNING eclient eserver

#exec -t 20m bash wait_ssh.sh
exec -t 5m bash wait_ssh.sh

eden pod ps
cp stdout pod_ps
exec bash eserver_ip.sh

exec sleep 10
exec -t 1m bash setup_srv.sh
exec sleep 10
exec -t 1m bash run_srv.sh &
exec sleep 10
exec -t 1m bash run_clent.sh
exec sleep 10
exec -t 1m bash get_result.sh
stdout '{{$test_msg}}'

eden pod delete eclient
eden pod delete eserver

test eden.app.test -test.v -timewait 10m - eclient eserver

-- eden-config.yml --
{{/* Test's config. file */}}
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}

-- wait_ssh.sh --

for i in `seq 10`
do
  sleep 5
  # Test SSH-access to container
  echo {{template "ssh"}} grep -q Ubuntu /etc/issue && break
  {{template "ssh"}} grep -q Ubuntu /etc/issue && break
done

-- eserver_ip.sh --
echo export ESERVER_IP=$(grep '^eserver\s' pod_ps | cut -f 4) > env

-- setup_srv.sh --
. ./env

echo {{template "ssh"}} "echo ssh -o StrictHostKeyChecking=no root@$ESERVER_IP nc -l 1234 > /tmp/server"
{{template "ssh"}} "echo ssh -o StrictHostKeyChecking=no root@$ESERVER_IP nc -l 1234 > /tmp/server"

-- run_srv.sh --
. ./env

echo {{template "ssh"}} 'sh /tmp/server > /tmp/out'
{{template "ssh"}} 'sh /tmp/server > /tmp/out'

-- run_clent.sh --
. ./env

echo {{template "ssh"}} "echo {{$test_msg}} | nc -N $ESERVER_IP 1234"
{{template "ssh"}} "echo {{$test_msg}} | nc -N $ESERVER_IP 1234"

-- get_result.sh --
. ./env

echo {{template "ssh"}} 'cat /tmp/out'
{{template "ssh"}} 'cat /tmp/out'
